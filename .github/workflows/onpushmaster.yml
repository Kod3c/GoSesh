name: OnPushMaster

on:
  push:
    branches:
      - 'master'
  
jobs:

#  test:
#    name: Run Unit Tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Run Tests
#        run: bash ./gradlew test --stacktrace  

  apk:
    name: Generate APK
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk 

  sign:
    name: Sign APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
    
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
          path: app/build/1/
          
      - name: Sign APK
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/1/
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: signed
          path: ${{ env.SIGNED_RELEASE_FILE }}
          
  release:
    name: Create APK Release
    needs: sign
    runs-on: ubuntu-latest
    steps:

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: signed
          path: app/build/2/signed.apk

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/2/signed.apk
          name: GS-${{ github.ref }}
          tag_name:	REL-${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  submit:
    name: Submit to Google Play
    needs: release
    runs-on: ubuntu-latest
    steps:
    
      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Play Store (BETA)
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.twdev.gosesh
          releaseFile: ${{ steps.create_release.outputs }}
          track: internal
          inAppUpdatePriority: 2
          whatsNewDirectory: distribution/whatsnew
          mappingFile: app/build/outputs/mapping/release/mapping.txt
